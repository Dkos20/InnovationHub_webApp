import { openBlock as t, createElementBlock as l, normalizeClass as a, toDisplayString as i, createCommentVNode as o, createElementVNode as s, renderSlot as n } from "vue";
import { _ as u } from "./_plugin-vue_export-helper.9d74fd37.js";
const d = {
  name: "FormInputWrapper",
  props: {
    label: {
      type: String,
      default: null
    },
    error: {
      type: String,
      default: null
    },
    id: {
      type: String,
      default: null
    },
    required: {
      type: [String, Boolean],
      default: !1
    },
    inputWrapClass: {
      type: [String, Object, Array],
      default: null
    }
  }
}, f = ["for"], c = ["innerHTML"];
function p(r, m, e, _, y, b) {
  return t(), l("div", {
    class: a(["form-input-wrap", { "has-validation-error": !!e.error }])
  }, [
    e.label ? (t(), l("label", {
      key: 0,
      for: e.id,
      class: a(["form-input-label", [e.required === !1 ? "" : "form-input-label--required"]])
    }, i(e.label), 11, f)) : o("", !0),
    s("div", {
      class: a(e.inputWrapClass)
    }, [
      n(r.$slots, "before-input"),
      n(r.$slots, "default"),
      n(r.$slots, "after-input")
    ], 2),
    e.error ? (t(), l("div", {
      key: 1,
      class: "form-validation-error",
      innerHTML: e.error
    }, null, 8, c)) : o("", !0)
  ], 2);
}
const v = /* @__PURE__ */ u(d, [["render", p]]);
export {
  v as default
};
