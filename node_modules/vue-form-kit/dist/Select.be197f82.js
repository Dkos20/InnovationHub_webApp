import { openBlock as n, createBlock as i, resolveDynamicComponent as d, createSlots as m, withCtx as o, renderList as f, renderSlot as s, normalizeProps as p, guardReactiveProps as c } from "vue";
import { _ as S } from "./_plugin-vue_export-helper.9d74fd37.js";
const b = {
  name: "FormSelect",
  props: {
    modelValue: {
      type: String,
      default: ""
    },
    tabindex: {
      type: String,
      default: null
    },
    options: {
      type: Array,
      default: () => []
    },
    label: {
      type: String,
      default: null
    },
    error: {
      type: String,
      default: null
    },
    id: {
      type: String,
      default: null
    },
    name: {
      type: String,
      default: null
    },
    required: {
      type: [String, Boolean],
      default: !1
    },
    inputWrapClass: {
      type: [String, Object, Array],
      default: null
    }
  },
  emits: ["update:modelValue"]
};
function y(t, l, e, g, q, C) {
  return n(), i(d(`${t.$formKitConfigs.componentPrefix}FormInputWrapper`), {
    id: e.id,
    label: e.label,
    error: e.error,
    required: e.required,
    "input-wrap-class": e.inputWrapClass
  }, m({
    default: o(() => [
      (n(), i(d(`${t.$formKitConfigs.componentPrefix}SelectStandard`), {
        id: e.id,
        "model-value": e.modelValue,
        options: e.options,
        name: e.name,
        label: e.label,
        required: e.required,
        tabindex: e.tabindex,
        class: "w-full",
        "onUpdate:modelValue": l[0] || (l[0] = (r) => t.$emit("update:modelValue", r))
      }, null, 8, ["id", "model-value", "options", "name", "label", "required", "tabindex"]))
    ]),
    _: 2
  }, [
    f(t.$slots, (r, a) => ({
      name: a,
      fn: o((u) => [
        s(t.$slots, a, p(c(u)))
      ])
    }))
  ]), 1032, ["id", "label", "error", "required", "input-wrap-class"]);
}
const v = /* @__PURE__ */ S(b, [["render", y]]);
export {
  v as default
};
